Leetcode :- 3223. Minimum Length of String After Operations

int minimumLength(string s) {
        unordered_map<char,int> m;
        for(auto x:s){
            m[x]++;
        }
        int ans=0;
        for(auto x:m){
            if(x.second<3) ans+=x.second;
            else{
                if(x.second%2!=0) ans+=1;
                else ans+=2;
            }
        }
        return ans;
}


84. Largest Rectangle in Histogram

int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        vector<int> ns(n),ps(n);
        stack<int> st1;
        for(int i=0;i<n;i++){
            if(st1.empty()) ps[i]=-1;
            else{
                while(!st1.empty() && heights[st1.top()]>=heights[i]){
                    st1.pop();
                }
                if(st1.empty()) ps[i]=-1;
                else ps[i]=st1.top();
            }
            st1.push(i);
        }
        stack<int> st2;
        for(int i=n-1;i>=0;i--){
            if(st2.empty()) ns[i]=n;
            else{
                while(!st2.empty() && heights[st2.top()]>=heights[i]){
                    st2.pop();
                }
                if(st2.empty()) ns[i]=n;
                else ns[i]=st2.top();
            }
            st2.push(i);
        }
        int ans=0;
        for(int i=0;i<n;i++){
            ans=max(ans,heights[i]*(ns[i]-ps[i]-1));
        }
        return ans;
 }


GFG - Container With Most Water :- 

int maxWater(vector<int> &heights) {
        // code here
        int n=heights.size();
        int left=0,right=n-1;
        int ans=0;
        while(left<right){
            ans=max(ans,min(heights[left],heights[right])*(right-left));
            if(heights[left]<=heights[right]) left++;
            else right--;
        }
        return ans;
}

